# ~ replace_na(., mean(., na.rm = TRUE)) es una fórmula que define la operación a realizar en cada columna seleccionada.
# replace_na(., mean(., na.rm = TRUE)) reemplaza los NA en cada columna (.) con el promedio de la columna,
# calculado con mean(., na.rm = TRUE), donde na.rm = TRUE indica que se deben omitir los NA al calcular el promedio.
data <- data %>%
mutate(across(all_of(cols_to_convert), ~ replace_na(., mean(., na.rm = TRUE))))
# Formatear los números (sin decimales para enteros, tres decimales para otros)
data <- data %>%
mutate(across(all_of(cols_to_convert), ~ ifelse(round(.) == ., format(round(.)), format(round(., 3)))))
na_count <- colSums(is.na(data))
na_count
# Guardar el dataframe limpio en un nuevo archivo CSV
write.csv(data, "~/Desktop/UNIVERSITY/Servicio-Social/Data-Mining/Datos/BINE/BINE-2022-limpiado.csv", row.names = FALSE)
# -------------------------------------------------------------
# DATOS 2020 - 2022
# NINFAS 2020
library(dplyr)
library(lubridate)
library(readr)
# Leer el archivo CSV
data <- read_csv("~/Desktop/UNIVERSITY/Servicio-Social/Data-Mining/Datos/NINFAS/Datos_Ninfas_2020.csv")
# Convertir valores específicos a NA en las columnas adecuadas
data <- data %>%
mutate(across(where(is.character), ~na_if(., "F.O."))) %>%
mutate(across(where(is.character), ~na_if(., "D.I."))) %>%
mutate(across(where(is.character), ~na_if(., "Mtto."))) %>%
mutate(across(where(is.character), ~na_if(., "Mtto")))
# Eliminar la columna 'O3 8 hrs (ppm)'
data <- data %>% select(-`O3 8 hrs (ppm)`)
# Renombrar las columnas para que coincidan con el archivo 'agua_santa_2023.csv'
colnames(data) <- c("FECHA", "Horas", "O3", "NO2", "CO", "SO2", "PM-10", "PM-2.5")
# Convertir la columna 'FECHA' al formato adecuado (día/mes/año)
data$FECHA <- format(as.Date(data$FECHA, format="%Y-%m-%d"), "%d/%m/%Y")
# Convertir las columnas numéricas que tienen valores como texto a tipo numérico
cols_to_convert <- c("O3", "NO2", "CO", "SO2", "PM-10", "PM-2.5")
data[cols_to_convert] <- lapply(data[cols_to_convert], as.numeric)
# Reemplazar los NA por el promedio de cada columna
# Dentro de mutate, across se utiliza para aplicar una función a las columnas especificadas en cols_to_convert.
# all_of(cols_to_convert) asegura que se utilicen las columnas especificadas en cols_to_convert.
# ~ replace_na(., mean(., na.rm = TRUE)) es una fórmula que define la operación a realizar en cada columna seleccionada.
# replace_na(., mean(., na.rm = TRUE)) reemplaza los NA en cada columna (.) con el promedio de la columna,
# calculado con mean(., na.rm = TRUE), donde na.rm = TRUE indica que se deben omitir los NA al calcular el promedio.
data <- data %>%
mutate(across(all_of(cols_to_convert), ~ replace_na(., mean(., na.rm = TRUE))))
# Formatear los números (sin decimales para enteros, tres decimales para otros)
data <- data %>%
mutate(across(all_of(cols_to_convert), ~ ifelse(round(.) == ., format(round(.)), format(round(., 3)))))
na_count <- colSums(is.na(data))
na_count
View(data)
# Guardar el dataframe limpio en un nuevo archivo CSV
write.csv(data, "~/Desktop/UNIVERSITY/Servicio-Social/Data-Mining/Datos/NINFAS/NINFAS-2020-limpiado.csv", row.names = FALSE)
# NINFAS 2021
library(dplyr)
library(lubridate)
library(readr)
# Leer el archivo CSV
data <- read_csv("~/Desktop/UNIVERSITY/Servicio-Social/Data-Mining/Datos/NINFAS/Datos_Ninfas_2021.csv")
# Convertir valores específicos a NA en las columnas adecuadas
data <- data %>%
mutate(across(where(is.character), ~na_if(., "F.O."))) %>%
mutate(across(where(is.character), ~na_if(., "D.I."))) %>%
mutate(across(where(is.character), ~na_if(., "Mtto."))) %>%
mutate(across(where(is.character), ~na_if(., "Mtto")))
# Eliminar la columna 'O3 8 hrs (ppm)'
data <- data %>% select(-`O3 8 hrs (ppm)`)
# Renombrar las columnas para que coincidan con el archivo 'agua_santa_2023.csv'
colnames(data) <- c("FECHA", "Horas", "O3", "NO2", "CO", "SO2", "PM-10", "PM-2.5")
# Convertir la columna 'FECHA' al formato adecuado (día/mes/año)
data$FECHA <- format(as.Date(data$FECHA, format="%Y-%m-%d"), "%d/%m/%Y")
# Convertir las columnas numéricas que tienen valores como texto a tipo numérico
cols_to_convert <- c("O3", "NO2", "CO", "SO2", "PM-10", "PM-2.5")
data[cols_to_convert] <- lapply(data[cols_to_convert], as.numeric)
# Reemplazar los NA por el promedio de cada columna
# Dentro de mutate, across se utiliza para aplicar una función a las columnas especificadas en cols_to_convert.
# all_of(cols_to_convert) asegura que se utilicen las columnas especificadas en cols_to_convert.
# ~ replace_na(., mean(., na.rm = TRUE)) es una fórmula que define la operación a realizar en cada columna seleccionada.
# replace_na(., mean(., na.rm = TRUE)) reemplaza los NA en cada columna (.) con el promedio de la columna,
# calculado con mean(., na.rm = TRUE), donde na.rm = TRUE indica que se deben omitir los NA al calcular el promedio.
data <- data %>%
mutate(across(all_of(cols_to_convert), ~ replace_na(., mean(., na.rm = TRUE))))
# Formatear los números (sin decimales para enteros, tres decimales para otros)
data <- data %>%
mutate(across(all_of(cols_to_convert), ~ ifelse(round(.) == ., format(round(.)), format(round(., 3)))))
na_count <- colSums(is.na(data))
na_count
library(dplyr)
library(lubridate)
library(readr)
# Leer el archivo CSV
data <- read_csv("~/Desktop/UNIVERSITY/Servicio-Social/Data-Mining/Datos/NINFAS/Datos_Ninfas_2021.csv")
View(data)
# Convertir valores específicos a NA en las columnas adecuadas
data <- data %>%
mutate(across(where(is.character), ~na_if(., "F.O."))) %>%
mutate(across(where(is.character), ~na_if(., "D.I."))) %>%
mutate(across(where(is.character), ~na_if(., "Mtto."))) %>%
mutate(across(where(is.character), ~na_if(., "Mtto")))
# Eliminar la columna 'O3 8 hrs (ppm)'
data <- data %>% select(-`O3 8 hrs (ppm)`)
# Renombrar las columnas para que coincidan con el archivo 'agua_santa_2023.csv'
colnames(data) <- c("FECHA", "Horas", "O3", "NO2", "CO", "SO2", "PM-10", "PM-2.5")
# Convertir la columna 'FECHA' al formato adecuado (día/mes/año)
data$FECHA <- format(as.Date(data$FECHA, format="%Y-%m-%d"), "%d/%m/%Y")
# Convertir las columnas numéricas que tienen valores como texto a tipo numérico
cols_to_convert <- c("O3", "NO2", "CO", "SO2", "PM-10", "PM-2.5")
data[cols_to_convert] <- lapply(data[cols_to_convert], as.numeric)
# Reemplazar los NA por el promedio de cada columna
# Dentro de mutate, across se utiliza para aplicar una función a las columnas especificadas en cols_to_convert.
# all_of(cols_to_convert) asegura que se utilicen las columnas especificadas en cols_to_convert.
# ~ replace_na(., mean(., na.rm = TRUE)) es una fórmula que define la operación a realizar en cada columna seleccionada.
# replace_na(., mean(., na.rm = TRUE)) reemplaza los NA en cada columna (.) con el promedio de la columna,
# calculado con mean(., na.rm = TRUE), donde na.rm = TRUE indica que se deben omitir los NA al calcular el promedio.
data <- data %>%
mutate(across(all_of(cols_to_convert), ~ replace_na(., mean(., na.rm = TRUE))))
# Formatear los números (sin decimales para enteros, tres decimales para otros)
data <- data %>%
mutate(across(all_of(cols_to_convert), ~ ifelse(round(.) == ., format(round(.)), format(round(., 3)))))
na_count <- colSums(is.na(data))
na_count
# Guardar el dataframe limpio en un nuevo archivo CSV
write.csv(data, "~/Desktop/UNIVERSITY/Servicio-Social/Data-Mining/Datos/NINFAS/NINFAS-2021-limpiado.csv", row.names = FALSE)
# -------------------------------------------------------------
# DATOS 2020 - 2022
# NINFAS 2021
library(dplyr)
library(lubridate)
library(readr)
# Leer el archivo CSV
data <- read_csv("~/Desktop/UNIVERSITY/Servicio-Social/Data-Mining/Datos/NINFAS/Datos_Ninfas_2022.csv")
# Convertir valores específicos a NA en las columnas adecuadas
data <- data %>%
mutate(across(where(is.character), ~na_if(., "F.O."))) %>%
mutate(across(where(is.character), ~na_if(., "D.I."))) %>%
mutate(across(where(is.character), ~na_if(., "Mtto."))) %>%
mutate(across(where(is.character), ~na_if(., "Mtto")))
# Eliminar la columna 'O3 8 hrs (ppm)'
data <- data %>% select(-`O3 8 hrs (ppm)`)
# Renombrar las columnas para que coincidan con el archivo 'agua_santa_2023.csv'
colnames(data) <- c("FECHA", "Horas", "O3", "NO2", "CO", "SO2", "PM-10", "PM-2.5")
# Convertir la columna 'FECHA' al formato adecuado (día/mes/año)
data$FECHA <- format(as.Date(data$FECHA, format="%Y-%m-%d"), "%d/%m/%Y")
# Convertir las columnas numéricas que tienen valores como texto a tipo numérico
cols_to_convert <- c("O3", "NO2", "CO", "SO2", "PM-10", "PM-2.5")
data[cols_to_convert] <- lapply(data[cols_to_convert], as.numeric)
# Reemplazar los NA por el promedio de cada columna
# Dentro de mutate, across se utiliza para aplicar una función a las columnas especificadas en cols_to_convert.
# all_of(cols_to_convert) asegura que se utilicen las columnas especificadas en cols_to_convert.
# ~ replace_na(., mean(., na.rm = TRUE)) es una fórmula que define la operación a realizar en cada columna seleccionada.
# replace_na(., mean(., na.rm = TRUE)) reemplaza los NA en cada columna (.) con el promedio de la columna,
# calculado con mean(., na.rm = TRUE), donde na.rm = TRUE indica que se deben omitir los NA al calcular el promedio.
data <- data %>%
mutate(across(all_of(cols_to_convert), ~ replace_na(., mean(., na.rm = TRUE))))
# Formatear los números (sin decimales para enteros, tres decimales para otros)
data <- data %>%
mutate(across(all_of(cols_to_convert), ~ ifelse(round(.) == ., format(round(.)), format(round(., 3)))))
na_count <- colSums(is.na(data))
na_count
View(data)
# Guardar el dataframe limpio en un nuevo archivo CSV
write.csv(data, "~/Desktop/UNIVERSITY/Servicio-Social/Data-Mining/Datos/NINFAS/NINFAS-2022-limpiado.csv", row.names = FALSE)
library(dplyr)
library(lubridate)
library(readr)
# Leer el archivo CSV
data <- read_csv("~/Desktop/UNIVERSITY/Servicio-Social/Data-Mining/Datos/UTP/Datos_UTP_2020.csv")
View(data)
# Convertir valores específicos a NA en las columnas adecuadas
data <- data %>%
mutate(across(where(is.character), ~na_if(., "F.O."))) %>%
mutate(across(where(is.character), ~na_if(., "D.I."))) %>%
mutate(across(where(is.character), ~na_if(., "Mtto."))) %>%
mutate(across(where(is.character), ~na_if(., "Mtto")))
# Eliminar la columna 'O3 8 hrs (ppm)'
data <- data %>% select(-`O3 8 hrs (ppm)`)
# Renombrar las columnas para que coincidan con el archivo 'agua_santa_2023.csv'
colnames(data) <- c("FECHA", "Horas", "O3", "NO2", "CO", "SO2", "PM-10", "PM-2.5")
# Convertir la columna 'FECHA' al formato adecuado (día/mes/año)
data$FECHA <- format(as.Date(data$FECHA, format="%Y-%m-%d"), "%d/%m/%Y")
# Convertir las columnas numéricas que tienen valores como texto a tipo numérico
cols_to_convert <- c("O3", "NO2", "CO", "SO2", "PM-10", "PM-2.5")
data[cols_to_convert] <- lapply(data[cols_to_convert], as.numeric)
# Reemplazar los NA por el promedio de cada columna
# Dentro de mutate, across se utiliza para aplicar una función a las columnas especificadas en cols_to_convert.
# all_of(cols_to_convert) asegura que se utilicen las columnas especificadas en cols_to_convert.
# ~ replace_na(., mean(., na.rm = TRUE)) es una fórmula que define la operación a realizar en cada columna seleccionada.
# replace_na(., mean(., na.rm = TRUE)) reemplaza los NA en cada columna (.) con el promedio de la columna,
# calculado con mean(., na.rm = TRUE), donde na.rm = TRUE indica que se deben omitir los NA al calcular el promedio.
data <- data %>%
mutate(across(all_of(cols_to_convert), ~ replace_na(., mean(., na.rm = TRUE))))
# Formatear los números (sin decimales para enteros, tres decimales para otros)
data <- data %>%
mutate(across(all_of(cols_to_convert), ~ ifelse(round(.) == ., format(round(.)), format(round(., 3)))))
na_count <- colSums(is.na(data))
na_count
View(data)
# Guardar el dataframe limpio en un nuevo archivo CSV
write.csv(data, "~/Desktop/UNIVERSITY/Servicio-Social/Data-Mining/Datos/UTP/UTP-2020-limpiado.csv", row.names = FALSE)
# -------------------------------------------------------------
# DATOS 2020 - 2022
# UTP 2021
library(dplyr)
library(lubridate)
library(readr)
# Leer el archivo CSV
data <- read_csv("~/Desktop/UNIVERSITY/Servicio-Social/Data-Mining/Datos/UTP/Datos_UTP_2021.csv")
# Convertir valores específicos a NA en las columnas adecuadas
data <- data %>%
mutate(across(where(is.character), ~na_if(., "F.O."))) %>%
mutate(across(where(is.character), ~na_if(., "D.I."))) %>%
mutate(across(where(is.character), ~na_if(., "Mtto."))) %>%
mutate(across(where(is.character), ~na_if(., "Mtto")))
# Eliminar la columna 'O3 8 hrs (ppm)'
data <- data %>% select(-`O3 8 hrs (ppm)`)
# Renombrar las columnas para que coincidan con el archivo 'agua_santa_2023.csv'
colnames(data) <- c("FECHA", "Horas", "O3", "NO2", "CO", "SO2", "PM-10", "PM-2.5")
# Convertir la columna 'FECHA' al formato adecuado (día/mes/año)
data$FECHA <- format(as.Date(data$FECHA, format="%Y-%m-%d"), "%d/%m/%Y")
# Convertir las columnas numéricas que tienen valores como texto a tipo numérico
cols_to_convert <- c("O3", "NO2", "CO", "SO2", "PM-10", "PM-2.5")
# aplica la función as.numeric a cada una de las columnas seleccionadas.
# lapply devuelve una lista donde cada elemento es el resultado de  aplicar as.numeric a las columnas,
# convirtiéndolas a numérico.
data[cols_to_convert] <- lapply(data[cols_to_convert], as.numeric)
# Reemplazar los NA por el promedio de cada columna
# Dentro de mutate, across se utiliza para aplicar una función a las columnas especificadas en cols_to_convert.
# all_of(cols_to_convert) asegura que se utilicen las columnas especificadas en cols_to_convert.
# ~ replace_na(., mean(., na.rm = TRUE)) es una fórmula que define la operación a realizar en cada columna seleccionada.
# replace_na(., mean(., na.rm = TRUE)) reemplaza los NA en cada columna (.) con el promedio de la columna,
# calculado con mean(., na.rm = TRUE), donde na.rm = TRUE indica que se deben omitir los NA al calcular el promedio.
data <- data %>%
mutate(across(all_of(cols_to_convert), ~ replace_na(., mean(., na.rm = TRUE))))
# Formatear los números (sin decimales para enteros, tres decimales para otros)
data <- data %>%
mutate(across(all_of(cols_to_convert), ~ ifelse(round(.) == ., format(round(.)), format(round(., 3)))))
na_count <- colSums(is.na(data))
na_count
View(data)
# Guardar el dataframe limpio en un nuevo archivo CSV
write.csv(data, "~/Desktop/UNIVERSITY/Servicio-Social/Data-Mining/Datos/UTP/UTP-2021-limpiado.csv", row.names = FALSE)
# -------------------------------------------------------------
# DATOS 2020 - 2022
# UTP 2021
library(dplyr)
library(lubridate)
library(readr)
# Leer el archivo CSV
data <- read_csv("~/Desktop/UNIVERSITY/Servicio-Social/Data-Mining/Datos/UTP/Datos_UTP_2022.csv")
# Convertir valores específicos a NA en las columnas adecuadas
data <- data %>%
mutate(across(where(is.character), ~na_if(., "F.O."))) %>%
mutate(across(where(is.character), ~na_if(., "D.I."))) %>%
mutate(across(where(is.character), ~na_if(., "Mtto."))) %>%
mutate(across(where(is.character), ~na_if(., "Mtto")))
# Eliminar la columna 'O3 8 hrs (ppm)'
data <- data %>% select(-`O3 8 hrs (ppm)`)
# Renombrar las columnas para que coincidan con el archivo 'agua_santa_2023.csv'
colnames(data) <- c("FECHA", "Horas", "O3", "NO2", "CO", "SO2", "PM-10", "PM-2.5")
# Convertir la columna 'FECHA' al formato adecuado (día/mes/año)
data$FECHA <- format(as.Date(data$FECHA, format="%Y-%m-%d"), "%d/%m/%Y")
# Convertir las columnas numéricas que tienen valores como texto a tipo numérico
cols_to_convert <- c("O3", "NO2", "CO", "SO2", "PM-10", "PM-2.5")
# aplica la función as.numeric a cada una de las columnas seleccionadas.
# lapply devuelve una lista donde cada elemento es el resultado de  aplicar as.numeric a las columnas,
# convirtiéndolas a numérico.
data[cols_to_convert] <- lapply(data[cols_to_convert], as.numeric)
# Reemplazar los NA por el promedio de cada columna
# Dentro de mutate, across se utiliza para aplicar una función a las columnas especificadas en cols_to_convert.
# all_of(cols_to_convert) asegura que se utilicen las columnas especificadas en cols_to_convert.
# ~ replace_na(., mean(., na.rm = TRUE)) es una fórmula que define la operación a realizar en cada columna seleccionada.
# replace_na(., mean(., na.rm = TRUE)) reemplaza los NA en cada columna (.) con el promedio de la columna,
# calculado con mean(., na.rm = TRUE), donde na.rm = TRUE indica que se deben omitir los NA al calcular el promedio.
data <- data %>%
mutate(across(all_of(cols_to_convert), ~ replace_na(., mean(., na.rm = TRUE))))
# Formatear los números (sin decimales para enteros, tres decimales para otros)
data <- data %>%
mutate(across(all_of(cols_to_convert), ~ ifelse(round(.) == ., format(round(.)), format(round(., 3)))))
na_count <- colSums(is.na(data))
na_count
View(data)
# Guardar el dataframe limpio en un nuevo archivo CSV
write.csv(data, "~/Desktop/UNIVERSITY/Servicio-Social/Data-Mining/Datos/UTP/UTP-2022-limpiado.csv", row.names = FALSE)
# DATOS 2020 - 2022
# VELODROMO 2020
library(dplyr)
library(lubridate)
library(readr)
# Leer el archivo CSV
data <- read_csv("~/Desktop/UNIVERSITY/Servicio-Social/Data-Mining/Datos/UTP/Datos_VEL_2020.csv")
# -------------------------------------------------------------
# DATOS 2020 - 2022
# VELODROMO 2020
library(dplyr)
library(lubridate)
library(readr)
# Leer el archivo CSV
data <- read_csv("~/Desktop/UNIVERSITY/Servicio-Social/Data-Mining/Datos/VELODROMO/Datos_VEL_2020.csv")
# Convertir valores específicos a NA en las columnas adecuadas
data <- data %>%
mutate(across(where(is.character), ~na_if(., "F.O."))) %>%
mutate(across(where(is.character), ~na_if(., "D.I."))) %>%
mutate(across(where(is.character), ~na_if(., "Mtto."))) %>%
mutate(across(where(is.character), ~na_if(., "Mtto")))
# Eliminar la columna 'O3 8 hrs (ppm)'
data <- data %>% select(-`O3 8 hrs (ppm)`)
# Renombrar las columnas para que coincidan con el archivo 'agua_santa_2023.csv'
colnames(data) <- c("FECHA", "Horas", "O3", "NO2", "CO", "SO2", "PM-10", "PM-2.5")
# Convertir la columna 'FECHA' al formato adecuado (día/mes/año)
data$FECHA <- format(as.Date(data$FECHA, format="%Y-%m-%d"), "%d/%m/%Y")
# Convertir las columnas numéricas que tienen valores como texto a tipo numérico
cols_to_convert <- c("O3", "NO2", "CO", "SO2", "PM-10", "PM-2.5")
# aplica la función as.numeric a cada una de las columnas seleccionadas.
# lapply devuelve una lista donde cada elemento es el resultado de  aplicar as.numeric a las columnas,
# convirtiéndolas a numérico.
data[cols_to_convert] <- lapply(data[cols_to_convert], as.numeric)
# Reemplazar los NA por el promedio de cada columna
# Dentro de mutate, across se utiliza para aplicar una función a las columnas especificadas en cols_to_convert.
# all_of(cols_to_convert) asegura que se utilicen las columnas especificadas en cols_to_convert.
# ~ replace_na(., mean(., na.rm = TRUE)) es una fórmula que define la operación a realizar en cada columna seleccionada.
# replace_na(., mean(., na.rm = TRUE)) reemplaza los NA en cada columna (.) con el promedio de la columna,
# calculado con mean(., na.rm = TRUE), donde na.rm = TRUE indica que se deben omitir los NA al calcular el promedio.
data <- data %>%
mutate(across(all_of(cols_to_convert), ~ replace_na(., mean(., na.rm = TRUE))))
# Formatear los números (sin decimales para enteros, tres decimales para otros)
data <- data %>%
mutate(across(all_of(cols_to_convert), ~ ifelse(round(.) == ., format(round(.)), format(round(., 3)))))
na_count <- colSums(is.na(data))
na_count
View(data)
# -------------------------------------------------------------
# DATOS 2020 - 2022
# VELODROMO 2020
library(dplyr)
library(lubridate)
library(readr)
# Leer el archivo CSV
data <- read_csv("~/Desktop/UNIVERSITY/Servicio-Social/Data-Mining/Datos/VELODROMO/Datos_VEL_2021.csv")
# Convertir valores específicos a NA en las columnas adecuadas
data <- data %>%
mutate(across(where(is.character), ~na_if(., "F.O."))) %>%
mutate(across(where(is.character), ~na_if(., "D.I."))) %>%
mutate(across(where(is.character), ~na_if(., "Mtto."))) %>%
mutate(across(where(is.character), ~na_if(., "Mtto")))
# Eliminar la columna 'O3 8 hrs (ppm)'
data <- data %>% select(-`O3 8 hrs (ppm)`)
# Renombrar las columnas para que coincidan con el archivo 'agua_santa_2023.csv'
colnames(data) <- c("FECHA", "Horas", "O3", "NO2", "CO", "SO2", "PM-10", "PM-2.5")
# Convertir la columna 'FECHA' al formato adecuado (día/mes/año)
data$FECHA <- format(as.Date(data$FECHA, format="%Y-%m-%d"), "%d/%m/%Y")
# Convertir las columnas numéricas que tienen valores como texto a tipo numérico
cols_to_convert <- c("O3", "NO2", "CO", "SO2", "PM-10", "PM-2.5")
# aplica la función as.numeric a cada una de las columnas seleccionadas.
# lapply devuelve una lista donde cada elemento es el resultado de  aplicar as.numeric a las columnas,
# convirtiéndolas a numérico.
data[cols_to_convert] <- lapply(data[cols_to_convert], as.numeric)
# Reemplazar los NA por el promedio de cada columna
# Dentro de mutate, across se utiliza para aplicar una función a las columnas especificadas en cols_to_convert.
# all_of(cols_to_convert) asegura que se utilicen las columnas especificadas en cols_to_convert.
# ~ replace_na(., mean(., na.rm = TRUE)) es una fórmula que define la operación a realizar en cada columna seleccionada.
# replace_na(., mean(., na.rm = TRUE)) reemplaza los NA en cada columna (.) con el promedio de la columna,
# calculado con mean(., na.rm = TRUE), donde na.rm = TRUE indica que se deben omitir los NA al calcular el promedio.
data <- data %>%
mutate(across(all_of(cols_to_convert), ~ replace_na(., mean(., na.rm = TRUE))))
# Formatear los números (sin decimales para enteros, tres decimales para otros)
data <- data %>%
mutate(across(all_of(cols_to_convert), ~ ifelse(round(.) == ., format(round(.)), format(round(., 3)))))
na_count <- colSums(is.na(data))
na_count
# -------------------------------------------------------------
# DATOS 2020 - 2022
# VELODROMO 2020
library(dplyr)
library(lubridate)
library(readr)
# Leer el archivo CSV
data <- read_csv("~/Desktop/UNIVERSITY/Servicio-Social/Data-Mining/Datos/VELODROMO/Datos_VEL_2022.csv")
# Convertir valores específicos a NA en las columnas adecuadas
data <- data %>%
mutate(across(where(is.character), ~na_if(., "F.O."))) %>%
mutate(across(where(is.character), ~na_if(., "D.I."))) %>%
mutate(across(where(is.character), ~na_if(., "Mtto."))) %>%
mutate(across(where(is.character), ~na_if(., "Mtto")))
# Eliminar la columna 'O3 8 hrs (ppm)'
data <- data %>% select(-`O3 8 hrs (ppm)`)
# Renombrar las columnas para que coincidan con el archivo 'agua_santa_2023.csv'
colnames(data) <- c("FECHA", "Horas", "O3", "NO2", "CO", "SO2", "PM-10", "PM-2.5")
# Convertir la columna 'FECHA' al formato adecuado (día/mes/año)
data$FECHA <- format(as.Date(data$FECHA, format="%Y-%m-%d"), "%d/%m/%Y")
# Convertir las columnas numéricas que tienen valores como texto a tipo numérico
cols_to_convert <- c("O3", "NO2", "CO", "SO2", "PM-10", "PM-2.5")
# aplica la función as.numeric a cada una de las columnas seleccionadas.
# lapply devuelve una lista donde cada elemento es el resultado de  aplicar as.numeric a las columnas,
# convirtiéndolas a numérico.
data[cols_to_convert] <- lapply(data[cols_to_convert], as.numeric)
# Reemplazar los NA por el promedio de cada columna
# Dentro de mutate, across se utiliza para aplicar una función a las columnas especificadas en cols_to_convert.
# all_of(cols_to_convert) asegura que se utilicen las columnas especificadas en cols_to_convert.
# ~ replace_na(., mean(., na.rm = TRUE)) es una fórmula que define la operación a realizar en cada columna seleccionada.
# replace_na(., mean(., na.rm = TRUE)) reemplaza los NA en cada columna (.) con el promedio de la columna,
# calculado con mean(., na.rm = TRUE), donde na.rm = TRUE indica que se deben omitir los NA al calcular el promedio.
data <- data %>%
mutate(across(all_of(cols_to_convert), ~ replace_na(., mean(., na.rm = TRUE))))
# Formatear los números (sin decimales para enteros, tres decimales para otros)
data <- data %>%
mutate(across(all_of(cols_to_convert), ~ ifelse(round(.) == ., format(round(.)), format(round(., 3)))))
na_count <- colSums(is.na(data))
na_count
# -------------------------------------------------------------
# DATOS 2020 - 2022
# VELODROMO 2020
library(dplyr)
library(lubridate)
library(readr)
# Leer el archivo CSV
data <- read_csv("~/Desktop/UNIVERSITY/Servicio-Social/Data-Mining/Datos/VELODROMO/Datos_VEL_2022.csv")
library(dplyr)
library(readr)
# Definir la ruta a la carpeta que contiene los archivos CSV
folder_path <- "~/Desktop/UNIVERSITY/Servicio-Social/Data-Mining/Datos/AGUA SANTA/limpios"
# Listar todos los archivos CSV en la carpeta
file_list <- list.files(path = folder_path, pattern = "*.csv", full.names = TRUE)
# Leer y concatenar todos los archivos CSV en un solo DataFrame
all_data <- lapply(file_list, read_csv) %>% bind_rows()
# Ordenar el DataFrame resultante por la columna FECHA_HORA (si existe)
# Asumimos que FECHA_HORA es de tipo POSIXct
all_data <- all_data %>%
arrange(FECHA_HORA)
# Ordenar el DataFrame resultante por la columna FECHA_HORA (si existe)
# Asumimos que FECHA_HORA es de tipo POSIXct
all_data <- all_data %>%
arrange(FECHA)
# Exportar el DataFrame combinado a un nuevo archivo CSV
write_csv(all_data, paste0(folder_path, "AGUA_SANTA_2020-2024_combinado.csv"))
View(all_data)
library(dplyr)
library(readr)
# Definir la ruta a la carpeta que contiene los archivos CSV
folder_path <- "~/Desktop/UNIVERSITY/Servicio-Social/Data-Mining/Datos/AGUA SANTA/limpios"
# Listar todos los archivos CSV en la carpeta
file_list <- list.files(path = folder_path, pattern = "*.csv", full.names = TRUE)
# Leer y concatenar todos los archivos CSV en un solo DataFrame
all_data <- lapply(file_list, read_csv) %>% bind_rows()
# Exportar el DataFrame combinado a un nuevo archivo CSV
write_csv(all_data, paste0(folder_path, "AGUA_SANTA_2020-2024_combinado.csv"))
# Mostrar las primeras filas del DataFrame combinado
head(all_data)
View(all_data)
# Exportar el DataFrame combinado a un nuevo archivo CSV
write_csv(all_data, paste0(folder_path, "AGUA_SANTA_2020-2024_combinado.csv"))
# BINE
library(dplyr)
library(readr)
# Definir la ruta a la carpeta que contiene los archivos CSV
folder_path <- "~/Desktop/UNIVERSITY/Servicio-Social/Data-Mining/Datos/BINE/limpios"
# Listar todos los archivos CSV en la carpeta
file_list <- list.files(path = folder_path, pattern = "*.csv", full.names = TRUE)
# Leer y concatenar todos los archivos CSV en un solo DataFrame
all_data <- lapply(file_list, read_csv) %>% bind_rows()
# Exportar el DataFrame combinado a un nuevo archivo CSV
write_csv(all_data, paste0(folder_path, "BINE_2020-2024_combinado.csv"))
# Mostrar las primeras filas del DataFrame combinado
head(all_data)
# Exportar el DataFrame combinado a un nuevo archivo CSV
write_csv(all_data, paste0(folder_path, "BINE_2021-2024_combinado.csv"))
# NINFAS
library(dplyr)
library(readr)
# Definir la ruta a la carpeta que contiene los archivos CSV
folder_path <- "~/Desktop/UNIVERSITY/Servicio-Social/Data-Mining/Datos/NINFAS/limpios"
# Listar todos los archivos CSV en la carpeta
file_list <- list.files(path = folder_path, pattern = "*.csv", full.names = TRUE)
# Leer y concatenar todos los archivos CSV en un solo DataFrame
all_data <- lapply(file_list, read_csv) %>% bind_rows()
# Exportar el DataFrame combinado a un nuevo archivo CSV
write_csv(all_data, paste0(folder_path, "NINFAS_2020-2024_combinado.csv"))
# Mostrar las primeras filas del DataFrame combinado
head(all_data)
View(all_data)
library(readr)
data <- read_csv("~/Desktop/UNIVERSITY/Servicio-Social/Data-Mining/Datos/AGUA SANTA/limpiosAGUASANTA_2020-2024.csv")
data <- read_csv("~/Desktop/UNIVERSITY/Servicio-Social/Data-Mining/Datos/AGUA SANTA/limpiosAGUA_SANTA_2020-2024.csv")
data <- read_csv("~/Desktop/UNIVERSITY/Servicio-Social/Data-Mining/Datos/AGUA SANTA/limpiosAGUA_SANTA_2020-2024_combinado.csv")
# Cargar los paquetes necesarios
library(dplyr)
library(ggplot2)
library(lubridate)
library(tidyr)
# Convertir las columnas FECHA y Horas a un solo datetime
data <- data %>%
mutate(Datetime = dmy_hms(paste(FECHA, Horas))) %>%
select(-FECHA, -Horas) %>%
arrange(Datetime)
# hacerlos long format (formato largo)
data_long <- data %>%
pivot_longer(cols = c(O3, NO2, CO, SO2, `PM-10`, `PM-2.5`),
names_to = "Contaminante",
values_to = "Concentracion")
# Extraer el mes del datetime
data_long <- data_long %>%
mutate(Mes = month(Datetime, label = TRUE, abbr = TRUE))
# Calcular el promedio por mes
promedio_mes <- data_long %>%
group_by(Mes, Contaminante) %>%
summarise(Promedio_Concentracion = mean(Concentracion, na.rm = TRUE)) %>%
ungroup()
# Asignar el gráfico a una variable
ggplot(promedio_mes, aes(x = Mes, y = Promedio_Concentracion, color = Contaminante, group = Contaminante)) +
geom_line(size = 1) +
facet_wrap(~ Contaminante, scales = "free_y") +
labs(title = "Promedio de concentración de contaminantes por mes en Puebla NINFAS 2023",
x = "Mes del año",
y = "Promedio de concentración") +
theme_minimal()
